name: Deploy Novabyte Blog UI

on:
  push:
    branches:
      - dev
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to deploy to'
        required: true
        default: stage
        type: choice
        options:
          - stage
          - prod

jobs:
  build-and-deploy:
    name: Build and Deploy to Server
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' ? 'prod' : 'stage' }}

    steps:
      # Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "NB_SSR_API_ADDR=${{ vars.NB_SSR_API_ADDR }}" >> .env
          echo "NB_API_ADDR=${{ vars.NB_API_ADDR }}" >> .env
          echo "NB_ADDRESS=${{ vars.NB_ADDRESS }}" >> .env
          echo "PORT=${{ vars.PORT }}" >> .env

      # Setup Node.js
      - name: Use Node.js version from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      # Install quasar cli
      - name: Install Quasar
        run: yarn global add @quasar/cli

      # Install node dependencies
      - name: Install Dependencies
        run: yarn install

      # Build the Quasar SSR app
      - name: Build Quasar SSR
        run: quasar build -m ssr

      # Deploy and Start Application
      - name: Deploy to ${{ github.ref == 'refs/heads/main' ? 'prod' : 'stage' }} via ssh
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: deploy
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

          # Use restricted commands
          ssh $SSH_USER@$SSH_HOST "mkdir -p /srv/www/ui"
          ssh $SSH_USER@$SSH_HOST "rm -rf /srv/www/ui/*"

          scp -r dist/ssr/* $SSH_USER@$SSH_HOST:/srv/www/ui
          scp -r .env $SSH_USER@$SSH_HOST:/srv/www/ui

          ssh $SSH_USER@$SSH_HOST "yarn --cwd /srv/www/ui install"
          ssh $SSH_USER@$SSH_HOST "sudo systemctl restart ui.service"
