name: Build and Deploy Quasar SSR App

on:
  push:
    branches:
      - dev
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to deploy to'
        required: true
        default: stage
        type: choice
        options:
          - stage
          - prod

jobs:
  build-and-deploy:
    name: Build and Deploy to Server 01
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      # # Checkout repository
      # - name: Checkout Code
      #   uses: actions/checkout@v3

      # - name: Create .env file
      #   run: |
      #     echo "NB_SSR_API_ADDR=${{ vars.NB_SSR_API_ADDR }}" >> .env
      #     echo "NB_API_ADDR=${{ vars.NB_API_ADDR }}" >> .env
      #     echo "PORT=${{ vars.PORT }}" >> .env

      # # Setup Node.js
      # - name: Use Node.js version from .nvmrc
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version-file: '.nvmrc'
      #     cache: 'yarn'

      # # Install dependencies
      # - name: Install Dependencies
      #   run: yarn install

      # # Install quasar cli
      # - name: Install Dependencies
      #   run: yarn global add @quasar/cli

      # # Build the Quasar SSR app
      # - name: Build Quasar SSR
      #   run: quasar build -m ssr

      # # Deploy and Start Application
      # - name: Deploy to DigitalOcean Droplet
      #   env:
      #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      #     SSH_HOST: ${{ secrets.SSH_HOST }}
      #     SSH_USER: ${{ secrets.SSH_USER }}
      #   run: |
      #     mkdir -p ~/.ssh
      #     echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
      #     chmod 600 ~/.ssh/id_rsa
      #     ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
      #     ssh $SSH_USER@$SSH_HOST << EOF
      #       mkdir -p /srv/www/ui && cd $_
      #       rm -rf .
      #       scp -r dist/ssr $SSH_USER@$SSH_HOST:/srv/www/ui
      #       yarn
      #       yarn run start
      #       EOF
      # Deploy and Start Application
      - name: Make ssh directory
        run: |
          mkdir -p /home/.ssh
          ls -a /home

      - name: Deploy to Server 01
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          echo "$SSH_PRIVATE_KEY" > /home/.ssh/id_rsa
          ls ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $SSH_HOST >> /home/.ssh/known_hosts
          ssh -T $SSH_USER@$SSH_HOST
